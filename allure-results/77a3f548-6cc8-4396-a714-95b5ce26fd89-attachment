# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Work with multiple tabs using BaseClass
- Location: /Users/rajatagarwal/playwright-project/tests/Rupyy.spec.js:9:1

# Error details

```
TimeoutError: page.fill: Timeout 30000ms exceeded.
Call log:
  - waiting for locator('input[name="q"]')

    at BaseClass.type (/Users/rajatagarwal/playwright-project/pages/BaseClass.js:19:21)
    at /Users/rajatagarwal/playwright-project/tests/Rupyy.spec.js:19:23
```

# Page snapshot

```yaml
- navigation:
  - link "About"
  - link "Store"
  - link "Gmail"
  - link "Search for Images": Images
  - button "Google apps":
    - img
  - link "Sign in"
- img
- search:
  - img
  - combobox "Search"
  - button "Search by voice":
    - img
  - button "Search by image":
    - img
  - link "AI Mode":
    - img
    - text: AI Mode
  - button "Google Search"
  - button "I'm Feeling Lucky"
- text: "Google offered in:"
- link "हिन्दी"
- link "বাংলা"
- link "తెలుగు"
- link "मराठी"
- link "தமிழ்"
- link "ગુજરાતી"
- link "ಕನ್ನಡ"
- link "മലയാളം"
- link "ਪੰਜਾਬੀ"
- contentinfo:
  - text: India
  - link "Advertising"
  - link "Business"
  - link "How Search works"
  - link "Privacy"
  - link "Terms"
  - button "Settings"
- dialog "Sign in to Google":
  - text: Sign in to Google Get the most from your Google account
  - button "Stay signed out"
  - button "Sign in"
```

# Test source

```ts
   1 | const { expect } = require('@playwright/test'); // ✅ Correct
   2 | const fs = require('fs');
   3 |
   4 | class BaseClass {
   5 |   constructor(page) {
   6 |     this.page = page;
   7 |     this.storageFile = 'storageState.json';
   8 |   }
   9 |
  10 |   async navigateTo(url) {
  11 |     await this.page.goto(url);
  12 |   }
  13 |
  14 |   async click(selector) {
  15 |     await this.page.click(selector);
  16 |   }
  17 |
  18 |   async type(selector, text) {
> 19 |     await this.page.fill(selector, text);
     |                     ^ TimeoutError: page.fill: Timeout 30000ms exceeded.
  20 |   }
  21 |
  22 |   async clearField(selector) {
  23 |     await this.page.fill(selector, '');
  24 |   }
  25 |
  26 |   async clickByRole(role, name) {
  27 |     await this.page.getByRole(role, { name }).click();
  28 |   }
  29 |
  30 |   async fillByRole(role, name, value) {
  31 |     await this.page.getByRole(role, { name }).fill(value);
  32 |   }
  33 |
  34 |   async expectByRole(role, name, assertion) {
  35 |     await expect(this.page.getByRole(role, { name })).toHaveText(assertion);
  36 |   }
  37 |
  38 |   assertion(role, name) {
  39 |     return this.page.getByRole(role, { name }); // ✅ Returns a Locator
  40 |   }
  41 |
  42 |   async getText(selector) {
  43 |     return (await this.page.textContent(selector)).trim();
  44 |   }
  45 |
  46 |   async waitForElement(selector, timeout = 5000) {
  47 |     await this.page.waitForSelector(selector, { timeout });
  48 |   }
  49 |
  50 |   async takeScreenshot(filename = 'screenshot.png') {
  51 |     await this.page.screenshot({ path: filename });
  52 |   }
  53 |
  54 |   async selectOption(selector, value) {
  55 |     await this.page.selectOption(selector, value);
  56 |   }
  57 |
  58 |   async uploadFile(uploadInputSelector, filePath) {
  59 |     await this.page.waitForSelector(uploadInputSelector, { state: 'visible', timeout: 5000 });
  60 |     await this.page.setInputFiles(uploadInputSelector, filePath);
  61 |   }
  62 |
  63 |   async hover(selector) {
  64 |     await this.page.hover(selector);
  65 |   }
  66 |
  67 |   async getPageTitle() {
  68 |     return await this.page.title();
  69 |   }
  70 |
  71 |   async isVisible(selector) {
  72 |     return await this.page.isVisible(selector);
  73 |   }
  74 | }
  75 |
  76 | module.exports = BaseClass;
  77 |
```