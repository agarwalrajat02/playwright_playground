# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Work with multiple tabs using BaseClass
- Location: /Users/rajatagarwal/playwright-project/tests/Rupyy.spec.js:9:1

# Error details

```
Error: browserType.launch: Executable doesn't exist at /Users/rajatagarwal/Library/Caches/ms-playwright/chromium-1161/chrome-mac/Chromium.app/Contents/MacOS/Chromium
╔═════════════════════════════════════════════════════════════════════════╗
║ Looks like Playwright Test or Playwright was just installed or updated. ║
║ Please run the following command to download new browsers:              ║
║                                                                         ║
║     npx playwright install                                              ║
║                                                                         ║
║ <3 Playwright Team                                                      ║
╚═════════════════════════════════════════════════════════════════════════╝
```

# Test source

```ts
   1 | const { test, expect } = require('@playwright/test');
   2 | const { ENV } = require('../utils/environment');
   3 | const BaseClass = require('../pages/BaseClass');
   4 | const { INPUT_CONSTANTS } = require('../utils/InputConstants');
   5 | const { SELECTORS } = require('../utils/Selectors');
   6 | const { assert, log } = require('console');
   7 |
   8 |
>  9 | test('Work with multiple tabs using BaseClass', async ({ page, context }) => {
     | ^ Error: browserType.launch: Executable doesn't exist at /Users/rajatagarwal/Library/Caches/ms-playwright/chromium-1161/chrome-mac/Chromium.app/Contents/MacOS/Chromium
  10 |   // 1. Set up BaseClass for MAIN TAB
  11 |   const baseClassMain = new BaseClass(page);
  12 |
  13 |   // 2. Go to SauceDemo in Main Tab
  14 |   await baseClassMain.navigateTo('https://www.saucedemo.com/');
  15 |   console.log('Main tab title:', await baseClassMain.getPageTitle());
  16 |
  17 |   // 3. Fill Username and Password in main tab using your helper
  18 |   await baseClassMain.type('#user-name', 'standard_user');
  19 |   await baseClassMain.type('#password', 'secret_sauce');
  20 |
  21 |   // 4. Optionally take a screenshot in main tab
  22 |   await baseClassMain.takeScreenshot('main_tab_login.png');
  23 |
  24 |   // 5. Open a NEW TAB and bind a new BaseClass instance
  25 |   const newTab = await context.newPage();
  26 |   const baseClassNewTab = new BaseClass(newTab);
  27 |
  28 |   // 6. Go to Playwright site in new tab
  29 |   await baseClassNewTab.navigateTo('https://playwright.dev');
  30 |   console.log('New tab title:', await baseClassNewTab.getPageTitle());
  31 |
  32 |   // 7. Interact on new tab (click "Docs")
  33 |   await baseClassNewTab.click('text=Docs');
  34 |   await expect(baseClassNewTab.page).toHaveURL(/.*docs.*/);
  35 |
  36 |   // 8. Switch context: Go back to main tab and attempt a login
  37 |   await baseClassMain.click('#login-button');
  38 |   // Assert a product is visible after login
  39 |   await baseClassMain.waitForElement('.inventory_list');
  40 |   expect(await baseClassMain.isVisible('.inventory_list')).toBe(true);
  41 |
  42 |   // 9. Close new tab (optional cleanup)
  43 |   await newTab.close();
  44 | });
  45 |
```